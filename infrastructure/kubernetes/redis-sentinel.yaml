apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-sentinel
  namespace: forgeflow-redis
  labels:
    app.kubernetes.io/name: redis-sentinel
    app.kubernetes.io/component: sentinel
    app.kubernetes.io/part-of: forgeflow-v2
spec:
  serviceName: redis-sentinel-service
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-sentinel
      app.kubernetes.io/component: sentinel
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis-sentinel
        app.kubernetes.io/component: sentinel
        app.kubernetes.io/part-of: forgeflow-v2
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
      containers:
      - name: redis-sentinel
        image: redis:7.2-alpine
        ports:
        - containerPort: 26379
          name: sentinel
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: redis-password
        - name: SENTINEL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: sentinel-password
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        command:
        - sh
        - -c
        - |
          cat > /tmp/sentinel.conf << EOF
          port 26379
          sentinel announce-ip ${POD_IP}
          sentinel announce-port 26379
          sentinel monitor forgeflow-master redis-master 6379 2
          sentinel auth-pass forgeflow-master ${REDIS_PASSWORD}
          sentinel down-after-milliseconds forgeflow-master 5000
          sentinel parallel-syncs forgeflow-master 1
          sentinel failover-timeout forgeflow-master 10000
          sentinel resolve-hostnames yes
          sentinel announce-hostnames yes
          logfile ""
          loglevel notice
          EOF
          redis-sentinel /tmp/sentinel.conf
        volumeMounts:
        - name: sentinel-data
          mountPath: /data
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -p
            - "26379"
            - ping
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -p
            - "26379"
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
  volumeClaimTemplates:
  - metadata:
      name: sentinel-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel-service
  namespace: forgeflow-redis
  labels:
    app.kubernetes.io/name: redis-sentinel
    app.kubernetes.io/component: sentinel
    app.kubernetes.io/part-of: forgeflow-v2
spec:
  selector:
    app.kubernetes.io/name: redis-sentinel
    app.kubernetes.io/component: sentinel
  ports:
  - port: 26379
    targetPort: 26379
    name: sentinel
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel
  namespace: forgeflow-redis
  labels:
    app.kubernetes.io/name: redis-sentinel
    app.kubernetes.io/component: sentinel
    app.kubernetes.io/part-of: forgeflow-v2
spec:
  selector:
    app.kubernetes.io/name: redis-sentinel
    app.kubernetes.io/component: sentinel
  ports:
  - port: 26379
    targetPort: 26379
    name: sentinel
  clusterIP: None  # Headless service for StatefulSet