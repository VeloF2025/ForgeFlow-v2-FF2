{
  "name": "@forgeflow/orchestrator-v2",
  "version": "2.0.0",
  "description": "True Parallel AI Orchestration System with Enterprise Protocols",
  "main": "dist/index.js",
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "dev": "tsx watch src/index.ts",
    "prebuild": "node src/hooks/build-notifier.js",
    "build": "tsc && tsc-alias",
    "postbuild": "node src/hooks/build-notifier.js",
    "start": "node dist/index.js",
    "pretest": "node src/hooks/build-notifier.js",
    "test": "vitest",
    "posttest": "node src/hooks/build-notifier.js",
    "test:coverage": "vitest run --coverage",
    "test:installation": "vitest run src/installation/__tests__",
    "test:installation:coverage": "vitest run --coverage src/installation/__tests__",
    "test:installation:watch": "vitest watch src/installation/__tests__",
    "lint": "eslint . --ext .ts,.tsx",
    "lint:fix": "eslint . --ext .ts,.tsx --fix",
    "typecheck": "tsc --noEmit",
    "format": "prettier --write \"src/**/*.{ts,tsx,json,md}\"",
    "validate": "npm run typecheck && npm run lint && npm run test:coverage",
    "validate:installation": "npm run typecheck && npm run lint && npm run test:installation:coverage",
    "test:integration": "vitest run tests/integration",
    "test:production": "vitest run tests/integration/production-readiness.test.ts",
    "test:cross-component": "vitest run tests/integration/cross-component-integration.test.ts",
    "test:user-acceptance": "vitest run tests/integration/user-acceptance.test.ts",
    "test:complete-production": "vitest run tests/integration/complete-production-readiness.test.ts",
    "validate:production": "npm run typecheck && npm run lint && npm run test:complete-production",
    "antihall:parse": "tsx src/protocols/antihall/parser.ts",
    "antihall:check": "tsx src/protocols/antihall/validator.ts",
    "antihall:find": "tsx src/protocols/antihall/finder.ts",
    "antihall:stats": "tsx src/protocols/antihall/stats.ts",
    "pm:init": "node .ccpm/init.js",
    "pm:prd-new": "node .ccpm/commands/prd-new.js",
    "pm:prd-parse": "node .ccpm/commands/prd-parse.js",
    "pm:epic-decompose": "node .ccpm/commands/epic-decompose.js",
    "pm:epic-sync": "node .ccpm/commands/epic-sync.js",
    "pm:issue-start": "node .ccpm/commands/issue-start.js",
    "pm:issue-sync": "node .ccpm/commands/issue-sync.js",
    "pm:status": "node .ccpm/commands/status.js",
    "pm:next": "node .ccpm/commands/next.js",
    "strategic-plan": "tsx src/cli/strategic-plan.ts",
    "parallel-execute": "tsx src/cli/parallel-execute.ts",
    "strategic-status": "tsx src/cli/strategic-status.ts",
    "ff2": "tsx src/installation/cli/index.ts",
    "browser-mcp:start": "npx @browsermcp/mcp",
    "browser-mcp:test": "vitest run tests/e2e/browser-mcp.test.ts",
    "browser-mcp:health": "curl -f http://localhost:3001/health || echo 'Browser MCP server not running'",
    "test:e2e:browser": "npm run browser-mcp:health && vitest run tests/e2e/browser-mcp.test.ts",
    "validate:browser-mcp": "npm run browser-mcp:health && npm run test:e2e:browser",
    "team:setup": "node setup-team-mode.js",
    "team:redis": "docker-compose -f infrastructure/docker/docker-compose.redis.yml up -d",
    "team:redis:stop": "docker-compose -f infrastructure/docker/docker-compose.redis.yml down",
    "team:dev": "NODE_ENV=development npm run team:redis && npm run dev",
    "team:test": "npm run team:redis && npm test -- src/auth src/collaboration",
    "team:migrate": "node scripts/migrate-to-team-mode.js"
  },
  "keywords": [
    "forgeflow",
    "ai-orchestration",
    "parallel-execution",
    "github-integration",
    "worktree",
    "enterprise",
    "zero-tolerance",
    "quality-gates"
  ],
  "author": "ForgeFlow Team",
  "license": "MIT",
  "dependencies": {
    "@browsermcp/mcp": "^0.1.3",
    "@modelcontextprotocol/sdk": "^1.17.4",
    "@octokit/graphql": "^8.0.0",
    "@octokit/rest": "^21.0.0",
    "archiver": "^7.0.1",
    "bcryptjs": "^3.0.2",
    "better-sqlite3": "^12.2.0",
    "chalk": "^5.3.0",
    "commander": "^12.1.0",
    "cors": "^2.8.5",
    "crypto": "^1.0.1",
    "dotenv": "^16.4.0",
    "execa": "^8.0.1",
    "express": "^4.18.0",
    "express-rate-limit": "^8.0.1",
    "extract-zip": "^2.0.1",
    "fs-extra": "^11.2.0",
    "globby": "^14.0.0",
    "helmet": "^8.1.0",
    "inquirer": "^9.3.7",
    "ioredis": "^5.7.0",
    "joi": "^18.0.1",
    "jsonwebtoken": "^9.0.2",
    "lru-cache": "^10.4.3",
    "ora": "^8.0.0",
    "p-queue": "^8.0.0",
    "passport": "^0.7.0",
    "passport-github2": "^0.1.12",
    "passport-google-oauth20": "^2.0.0",
    "prom-client": "^15.1.0",
    "qrcode": "^1.5.4",
    "redis": "^5.8.2",
    "simple-git": "^3.22.0",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "speakeasy": "^2.0.0",
    "sqlite3": "^5.1.7",
    "table": "^6.9.0",
    "uuid": "^11.1.0",
    "winston": "^3.11.0",
    "ws": "^8.18.3",
    "yaml": "^2.8.1",
    "zod": "^3.22.0"
  },
  "devDependencies": {
    "@types/bcryptjs": "^3.0.0",
    "@types/better-sqlite3": "^7.6.13",
    "@types/cors": "^2.8.19",
    "@types/express": "^4.17.23",
    "@types/fs-extra": "^11.0.0",
    "@types/inquirer": "^9.0.0",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node": "^20.0.0",
    "@types/passport": "^1.0.17",
    "@types/qrcode": "^1.5.5",
    "@types/speakeasy": "^2.0.10",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "@vitest/coverage-v8": "^1.2.0",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.0",
    "prettier": "^3.2.0",
    "redis-memory-server": "^0.13.0",
    "tsc-alias": "^1.8.0",
    "tsx": "^4.7.0",
    "typescript": "^5.3.0",
    "vitest": "^1.2.0"
  }
}